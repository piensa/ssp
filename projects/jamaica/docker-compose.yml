version: '3'
networks:
  default:
    driver: bridge
services:
  libpostal:
    image: pelias/libpostal-service
    container_name: pelias_libpostal
    user: "${DOCKER_USER}"
    restart: always
    ports: [ "4400:4400" ]
  schema:
    image: pelias/schema:master
    container_name: pelias_schema
    user: "${DOCKER_USER}"
    volumes:
      - "./ssp.json:/code/pelias.json"
  api:
    image: pelias/api:master
    container_name: pelias_api
    user: "${DOCKER_USER}"
    restart: always
    environment: [ "PORT=4000" ]
    ports: [ "4000:4000" ]
    volumes:
      - "./ssp.json:/code/pelias.json"
  placeholder:
    image: pelias/placeholder:master
    container_name: pelias_placeholder
    user: "${DOCKER_USER}"
    restart: always
    environment: [ "PORT=4100" ]
    ports: [ "4100:4100" ]
    volumes:
      - "./ssp.json:/code/pelias.json"
      - "${DATA_DIR}:/data"
      - "./blacklist/:/data/blacklist"
  whosonfirst:
    image: pelias/whosonfirst:master
    container_name: pelias_whosonfirst
    user: "${DOCKER_USER}"
    volumes:
      - "./ssp.json:/code/pelias.json"
      - "${DATA_DIR}:/data"
      - "./blacklist/:/data/blacklist"
  openstreetmap:
    image: pelias/openstreetmap:master
    container_name: pelias_openstreetmap
    user: "${DOCKER_USER}"
    volumes:
      - "./ssp.json:/code/pelias.json"
      - "${DATA_DIR}:/data"
      - "./blacklist/:/data/blacklist"
  openaddresses:
    image: pelias/openaddresses:master
    container_name: pelias_openaddresses
    user: "${DOCKER_USER}"
    volumes:
      - "./ssp.json:/code/pelias.json"
      - "${DATA_DIR}:/data"
      - "./blacklist/:/data/blacklist"
  transit:
    image: pelias/transit:master
    container_name: pelias_transit
    user: "${DOCKER_USER}"
    volumes:
      - "./ssp.json:/code/pelias.json"
      - "${DATA_DIR}:/data"
  csv-importer:
    image: pelias/csv-importer:master
    container_name: pelias_csv_importer
    user: "${DOCKER_USER}"
    volumes:
      - "./ssp.json:/code/pelias.json"
      - "${DATA_DIR}:/data"
      - "./blacklist/:/data/blacklist"
  polylines:
    image: pelias/polylines:master
    container_name: pelias_polylines
    user: "${DOCKER_USER}"
    volumes:
      - "./ssp.json:/code/pelias.json"
      - "${DATA_DIR}:/data"
  interpolation:
    image: pelias/interpolation:master
    container_name: pelias_interpolation
    user: "${DOCKER_USER}"
    restart: always
    environment: [ "PORT=4300" ]
    ports: [ "4300:4300" ]
    volumes:
      - "./ssp.json:/code/pelias.json"
      - "${DATA_DIR}:/data"
  pip:
    image: pelias/pip-service:master
    container_name: pelias_pip-service
    user: "${DOCKER_USER}"
    restart: always
    environment: [ "PORT=4200" ]
    ports: [ "4200:4200" ]
    volumes:
      - "./ssp.json:/code/pelias.json"
      - "${DATA_DIR}:/data"
  elasticsearch:
    image: pelias/elasticsearch:5.6.12
    container_name: pelias_elasticsearch
    restart: always
    ports: [ "9200:9200", "9300:9300" ]
    volumes:
      - "${DATA_DIR}/elasticsearch:/usr/share/elasticsearch/data"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add: [ "IPC_LOCK" ]
  fuzzy-tester:
    image: pelias/fuzzy-tester:master
    container_name: pelias_fuzzy_tester
    user: "${DOCKER_USER}"
    restart: "no"
    command: "--help"
    volumes:
      - "./ssp.json:/code/pelias.json"
      - "./test_cases:/code/pelias/fuzzy-tester/test_cases"
  hydra:
    image: oryd/hydra:v1.0.0-rc.6_oryOS.10
    container_name: hydra
    ports: ["4444:4444", "4445:4445", "5555:5555"]
    command: "serve all --dangerous-force-http"
    environment: ["DATABASE_URL=memory", "OAUTH2_CONSENT_URL=http://logico:3000/consent", "OAUTH2_LOGIN_URL=http://logico:3000/login"]
    networks:
      default:
        aliases:
          - hydra
  logico:
    container_name: logico
    image: "ninjalikeme/logico"
    command: /app/main
    networks:
      default:
        aliases:
          - logico
    environment:
      - DB_USER=$PG_USER
      - DB_PW=$PG_PW
      - DB_NAME=$USER_DB
      - DB_HOST=postgresd
      - DB_PORT=5432
      - HYDRA_PUBLIC_URL=http://hydra:4444/oauth2/token
      - HYDRA_ADMIN_URL=http://hydra:4445
      - HYDRA_CLIENT_ID=piensa
      - HYDRA_CLIENT_SECRET=piensa
      - HYDRA_SCOPES=openid,offline,eat,sleep,rave,repeat
      - PORT=3000
    links: ["hydra", "postgresd"]
    ports: ["3000:3000"]
  postgresd:
    image: postgres:9.6
    container_name: postgresd
    environment: [POSTGRES_USER=$PG_USER, POSTGRES_PASSWORD=$PG_PW, POSTGRES_DB=$PG_DB, USER_DB=$USER_DB]
    volumes:
      - "./postgres/:/dump"
  keto:
    container_name: keto
    image: oryd/keto:v0.2.2-sandbox_oryOS.10
    depends_on:
      - hydra
    links:
      - hydra:hydra
      - postgresd:postgresd
    environment:
      - DATABASE_URL=memory
      - AUTHENTICATOR_OAUTH2_CLIENT_CREDENTIALS_TOKEN_URL=http://hydra:4444/oauth2/token
      - AUTHENTICATOR_OAUTH2_INTROSPECTION_URL=http://hydra:4445/oauth2/introspect
    networks:
      - default
    ports:
      - 4466:4466
    restart: on-failure
    volumes:
      - "./config/:/config/"
  ok-api:
    container_name: ok-api
    image: oryd/oathkeeper:v0.14.2_oryOS.10
    links:
      - hydra:hydra
      - keto:keto
      - postgresd:postgresd
    ports:
      - 4456:4456
    networks:
      - default
    restart: on-failure
    environment:
      - LOG_LEVEL=debug
      - ISSUER_URL=http://ok-proxy:4455/
      - DATABASE_URL=memory
      - PORT=4456
      - CREDENTIALS_ISSUER_ID_TOKEN_HS256_SECRET=changemechangemechangemechangemedo
      - AUTHORIZER_KETO_URL=http://keto:4466
      - AUTHENTICATOR_OAUTH2_INTROSPECTION_URL=http://hydra:4445/oauth2/introspect
    command: serve api
    volumes:
      - "./config/:/config/"
  ok-proxy:
    container_name: ok-proxy
    image: oryd/oathkeeper:v0.14.2_oryOS.10
    links:
      - hydra:hydra
      - keto:keto
      - ok-api:ok-api
    ports:
      - 4455:4455
    restart: on-failure
    depends_on:
      - ok-api
    networks:
      - default
    environment:
      - LOG_LEVEL=debug
      - OATHKEEPER_API_URL=http://ok-api:4456
      - PORT=4455
      - CREDENTIALS_ISSUER_ID_TOKEN_HS256_SECRET=changemechangemechangemechangeme
      - AUTHORIZER_KETO_URL=http://keto:4466
      - AUTHENTICATOR_OAUTH2_INTROSPECTION_URL=http://hydra:4445/oauth2/introspect
    command: serve proxy


